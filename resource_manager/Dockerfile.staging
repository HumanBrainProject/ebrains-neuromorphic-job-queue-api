#
# Build an image for deploying the Neuromorphic Computing Platform resource manager app
#
# To build the image, from the parent directory:
#   docker build -t cnrsunic/nmpi_resource_manager -f resource_manager/Dockerfile .
#
# To run the application:
#   docker run -d -p 443 cnrsunic/nmpi_resource_manager


FROM debian:buster-slim
MAINTAINER Andrew Davison <andrew.davison@cnrs.fr>

ENV DEBIAN_FRONTEND noninteractive
RUN apt-get update --fix-missing
RUN apt-get -y -q install python3-dev python3-pip sqlite3 python3-psycopg2 supervisor build-essential nginx-extras python3-requests
RUN unset DEBIAN_FRONTEND

RUN pip3 install --upgrade pip
RUN pip3 install uwsgi

ENV SITEDIR /home/docker/site

COPY resource_manager $SITEDIR
COPY quotas /home/docker/quotas
COPY build_info.json $SITEDIR

WORKDIR /home/docker
RUN pip3 install -r $SITEDIR/requirements.txt
ENV PYTHONPATH  /home/docker:/home/docker/site:/usr/local/lib/python3.7/dist-packages:/usr/lib/python3.7/dist-packages

WORKDIR $SITEDIR
RUN if [ -f $SITEDIR/db.sqlite3 ]; then rm $SITEDIR/db.sqlite3; fi
RUN python3 manage.py check
RUN python3 manage.py collectstatic --noinput

RUN echo "daemon off;" >> /etc/nginx/nginx.conf
RUN rm /etc/nginx/sites-enabled/default
RUN ln -s $SITEDIR/deployment/nginx-app-staging.conf /etc/nginx/sites-enabled/nginx-app.conf
RUN ln -s $SITEDIR/deployment/supervisor-app.conf /etc/supervisor/conf.d/
RUN ln -sf /dev/stdout /var/log/nginx/access.log
RUN ln -sf /dev/stderr /var/log/nginx/error.log

EXPOSE 443
CMD ["supervisord", "-n", "-c", "/etc/supervisor/conf.d/supervisor-app.conf"]
